<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAdEAAAE5CAYAAADP1Bp0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAW
        JQAAFiUBSVIk8AAACy1JREFUeF7t3EGLHAUChuEccwgbEAKCh4WAoIRkCeqyJwn7AwLKhEDA85CcEmI2
        EEMQ9hw8DHrQPWT3MHqQvbh/Jl7iJf6N2ny9U0NvW51MPkW6u54HPsbu9HRHD/Na1TV9agAAKiIKACUR
        BYCSiAJASUQBoCSiAFCqI/rj06fDP588Gd44e3b441tvmZmZ7cTStfQtnXuV147oT8+eDdf39hYvdOGd
        d4bLly4tvpqZme3C/vLBB4uv6dxHV68e1W/aa0X05+fPF4VOOMcXubW/P/z7+++Hbw8PzczMtmo54vzm
        66+Pl/vSubfPnz/u3MtCeuKI5snfPHdu8aRZQvq3Tz8d/vPDD7/4S5mZmW36EtAcHE7J/WdOn15ENL3L
        P0899kQR/ceLgOawdgzockjzAmZmZtu4HHHmyDMHilNy/3hUmsflLc1lr4zouoCamZntyhLUdUebOZ2b
        P8+BY64JWvbSiAqomZnNaTnanApp4pmI5m3NZWsjmidZfg/UzMxsDpsKaU7j5rRujki/ePz46N6XRDSH
        tVNPbmZmtutLA1eNv9qZs7SjyYh+dXCweODUE5uZme360sC0cNmJI/rJjRuLc79TT2xmZrbrSwPTwmUn
        jqj3Qs3MbO5bvYjoxBF1Ra6Zmc19aeEyETUzMzvhRNTMzKzcxkc0b9zm927yemZmtntLdLb1QtX8/ZeN
        /z4bEdG8Rj4BYvVzCAHYHV8eHCyucv09uvJbb2Mjuu5jlQDYTfmZn5/9U03Y1G1kRHPJsIACzM+2fZzs
        xkV09cUBmJc0IC2YasSmbeMimkN5AOZtW07rblRE88LfHR4evQIAc5UWbMPR6MZF1KlcALbllK6IArBx
        RLSYiAIQIlpMRAEIES0mogCEiBYTUQBCRIuJKAAhosVEFIAQ0WIiCkCIaDERBSBEtJiIAhAiWkxEAQgR
        LSaiAISIFhNRAEJEi4koACGixUQUgBDRYiIKQIhoMREFIES0mIgCECJaTEQBCBEtJqIAhIgWE1EAQkSL
        iSgAIaLFRBSAENFiIgpAiGgxEQUgRLSYiAIQIlpMRAEIES0mogCEiBYTUQBCRIuJKAAhosVEFIAQ0WIi
        CkCIaDERBSBEtJiIAhAiWkxEAQgRLSaiAISIFhNRAEJEi4koACGixUQUgBDRYiIKQIhoMREFIET0xd6/
        fHm4fPHi8XJ76nHjRBSAmHVE//zee8PFd98d9j7+eHjw2WfD/fv3F19zO/dPfU8mogDEbCOagF758MPh
        4cOHw927d4fbt28fL7cfPXq09j+MiAIQs41oTtvu7+8Pd+7cWYQzXxPP5ds3b95cPG71e0UUgJhlRHMU
        +tcrVxanb8cjz1u3bg3Xr11bfB2PTPPneVwev/z9IgpAzDKiuXDo2otgjkeeCeepU6eOl9vjkWket3qh
        kYgCELOP6CKUe3v/F9HcPv4zEQVgjVlGdPV07oMHD4b3X9z3hzNnFl9z2+lcAF5llhHNxguLcrQ5BjPx
        HMOa07n5cxcWAbDObCM6Ho0mlPfu3VuEc1zCml99ya/ArB6FZiIKQMw2olkC+acLF9Z+2MJUQDMRBSBm
        HdFxuXAop23HrV5ItDoRBSBEtJiIAhAiWkxEAQgRLSaiAISIFhNRAEJEi4koACGixUQUgBDRYiIKQIho
        MREFIES0mIgCECJaTEQBCBEtJqIAhIgWE1EAQkSLiSgAIaLFRBSAENFiIgpAiGgxEQUgRLSYiAIQIlpM
        RAEIES0mogCEiBYTUQBCRIuJKAAhosVEFIAQ0WIiCkCIaDERBSBEtJiIAhAiWkxEAQgRLSaiAISIFhNR
        AEJEi4koACGixUQUgBDRYiIKQIhoMREFIES0mIgCECJaTEQBCBEtJqIAhIgWE1EAQkSLiSgAIaLFRBSA
        ENFiIgpAiGgxEQUgRLSYiAIQIlpMRAEIES0mogCEiBYTUQBCRIuJKAAhosVEFIAQ0WIiCkCIaDERBSBE
        tJiIAhAiWkxEAQgRLSaiAISIFhNRAEJEi4koACGixUQUgBDRYiIKQIhoMREFIES0mIgCECJaTEQBCBEt
        JqIAhIgWE1EAQkSLiSgAIaLFRBSAENFiIgpAiGgxEQUgRLSYiAIQIlpMRAEIES0mogCEiBYTUQBCRIuJ
        KAAhosVEFIAQ0WIiCkCIaDERBSBEtJiIAhAiWkxEAQgRLSaiAISIFhNRAEJEi4koACGixUQUgBDRYiIK
        QIhoMREFIES0mIgCECJaTEQBCBEtJqIAhIgWE1EAQkSLiSgAIaLFRBSAENFiIgpAiGgxEQUgRLSYiAIQ
        IlpMRAEIES0mogCEiBYTUQBCRIuJKAAhosVEFIAQ0WIiCkCIaDERBSBEtJiIAhAiWkxEAQgRLSaiAISI
        FhNRAEJEi4koACGixUQUgBDRYiIKQIhoMREFIES0mIgCECJaTEQBCBEtJqIAhIgWE1EAQkSLiSgAIaLF
        RBSAENFiIgpAiGgxEQUgRLSYiAIQIlpMRAEIES0mogCEiBYTUQBCRIuJKAAhosVEFIAQ0WIiCkCIaDER
        BSBEtJiIAhAiWkxEAQgRLSaiAISIFhNRAEJEi4koACGixUQUgBDRYiIKQIhoMREFIES0mIgCECJaTEQB
        CBEtJqIAhIgWE1EAQkSLiSgAIaLFRBSAENFiIgpAiGgxEQUgRLSYiAIQIlpMRAEIES0mogCEiBYTUQBC
        RIuJKAAhosVEFIAQ0WIiCkCIaDERBSBEtJiIAhAiWkxEAQgRLSaiAISIFhNRAEJEi4koACGixUQUgBDR
        YiIKQIhoMREFIES0mIgCECJaTEQBCBEtJqIAhIgWE1EAQkSLiSgAIaLFRBSAENFiIgpAiGgxEQUgRLSY
        iAIQIlpMRAEIES0mogCEiBYTUQBCRIuJKAAhosVEFIAQ0WIiCkCIaDERBSBEtJiIAhAiWkxEAQgRLSai
        AISIFhNRAEJEi4koACGixUQUgBDRYiIKQIhoMREFIES0mIgCECJaTEQBCBEtJqIAhIgWE1EAQkSLiSgA
        IaLFRBSAENFiIgpAiGgxEQUgRLSYiAIQIlpMRAEIES0mogCEiBYTUQBCRIuJKAAhosVEFIAQ0WIiCkCI
        aDERBSBEtJiIAhAiWkxEAQgRLSaiAISIFhNRAEJEi4koACGixUQUgBDRYiIKQIhoMREFIES0mIgCECJa
        TEQBCBEtJqIAhIgWE1EAQkSLiSgAIaLFRBSAENFiIgpAiGgxEQUgRLSYiAIQIlpMRAEIES0mogCEiBbL
        C393eHj0CgDMVVogosXeOHv26BUAmKu0YKoRm7aNi+jb588PPz9/fvQqAMxNGpAWTDVi07ZxEc3yfyBC
        CjA/+dm/LUeh2UZGNBNSgHnZtoBmGxvRLK9xfW9v+OnZs6NXBWDX5Gd8ftb/Hl35rbfREc0uX7q0ODee
        1zMzs91bfsbnZ/1UAzZ9+fsvy+2NiqiZmdmmbjmiPz59uvgfgkT0i8ePj+4VUTMzs8ktR/RfT54sAvrm
        uXNH9/yPiJqZmU1sjGguiko8c1o67+8um4xoHjz1hGZmZnPZGNHxquJ8Xb0YdjKin9y4sbVvBJuZmf3a
        pYF///zz4zOzObic+tXMyYh+dXCwOPe7+qRmZmZz2XgwmYB+s3RF7rLJiMaZ06d/8YRmZmZzWSKaFr7s
        w4HWRjTf5AIjMzOb2xLP9O+jq1ePirje2ohGnkBIzcxsLkvzXufT9F4a0Rg/79CFRmZmtqs7yanbKa+M
        aIyffZg3V3PBkZmZ2S4sn0KUtp3k1O2UE0V0WT7uKFcpmZmZbfO+PDhYfJzfr/HaEQUAYhj+C/COBdhf
        yv+pAAAAAElFTkSuQmCC
</value>
  </data>
</root>